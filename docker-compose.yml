services:
  api:
    networks:
      - app-network
    restart: unless-stopped
    image: ghcr.io/hackbg/undexer:v4
    build: { context: . }
    entrypoint: /app/undexer
    command: api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:insecure@postgres:5432/postgres

  indexer:
    networks:
      - app-network
    restart: unless-stopped
    image: ghcr.io/hackbg/undexer:v4
    build: { context: . }
    entrypoint: /app/undexer
    command: index
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:insecure@postgres:5432/postgres

  postgres:
    networks:
      - app-network
    restart: unless-stopped
    image: postgres:16.2-alpine
    ports: [ "5432:5432" ]
    environment:
      - POSTGRES_PASSWORD=insecure
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
volumes:
  database:
